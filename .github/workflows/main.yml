name: CI/CD Pipeline
on:
  push:
    branches: main

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .[test]
      - name: Remove unwanted files
        run: rm data/api_dataset.pkl.dvc && rm models/api_metrics.json.dvc && rm models/api.joblib.dvc
      - name: Pull base dataset from blob storage
        run: dvc pull
      - name: Upload base dataset
        uses: actions/upload-artifact@v2
        with:
          name: dataset
          path: ./data/dataset_credit_risk.csv
      - name: Unit testing
        run: pytest -m unit

  feature-engineering:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .
      - name: Download base dataset
        uses: actions/download-artifact@v2
        with:
          name: dataset
          path: ./data
      - name: Feature engineering
        run: mlops feature-engineering
      - name: Upload API dataset
        uses: actions/upload-artifact@v2
        with:
          name: api-dataset
          path: ./data/api_dataset.pkl

  data-test:
    needs: feature-engineering
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .[test]
      - name: Download base dataset
        uses: actions/download-artifact@v2
        with:
          name: dataset
          path: ./data
      - name: Download API dataset
        uses: actions/download-artifact@v2
        with:
          name: api-dataset
          path: ./data
      - name: Base dataset test
        run: cd tests && great_expectations checkpoint run credit_risk
      - name: API dataset test
        run: cd tests && great_expectations checkpoint run api

  train-model:
    needs: feature-engineering
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .
      - name: Download API dataset
        uses: actions/download-artifact@v2
        with:
          name: api-dataset
          path: ./data
      - name: Train model
        run: mlops train-model
      - name: Show metrics
        run: cat models/api_metrics.json
      - name: Upload model
        uses: actions/upload-artifact@v2
        with:
          name: model
          path: ./models/api.joblib

  model-api-test:
    needs: train-model
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .[test]
      - name: Download API dataset
        uses: actions/download-artifact@v2
        with:
          name: api-dataset
          path: ./data
      - name: Download model
        uses: actions/download-artifact@v2
        with:
          name: model
          path: ./models
      - name: Test model
        run: pytest -m model
      - name: Test API
        run: pytest -m api

  documentation:
    needs: [unit-test, data-test, model-api-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Upgrade installation packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MLOps package
        run: python -m pip install -e .[docs]
      - name: Deploy documentation
        run: mkdocs gh-deploy --force

  docker:
    needs: [unit-test, data-test, model-api-test]
    runs-on: ubuntu-latest
    environment: 'production'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download API dataset
        uses: actions/download-artifact@v2
        with:
          name: api-dataset
          path: ./data
      - name: Download model
        uses: actions/download-artifact@v2
        with:
          name: model
          path: ./models
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mlops:latest

  deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name GitApplication \
            --deployment-group-name DeploymentGroup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}